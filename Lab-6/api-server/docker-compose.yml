version: '3.9'

volumes:
    api-music-storage:
    db-mysql:
    redis:
    minio:
    cron-server-storage:

networks:
    c4_network:
        ipam:
            driver: default
            config:
                -   subnet: "172.15.0.0/24"

services:
    gateway:
        image: nginx:1.21-alpine
        restart: always
        container_name: gateway
        networks:
            c4_network:
                ipv4_address: 172.15.0.2
        ports:
            - "80:80"
        extra_hosts:
            - "api.music.internal:172.15.0.3"
        volumes:
            - ./:/var/www/api-music
            - ./docker/nginx/conf.d:/etc/nginx/templates/

    api-music:
        build:
            context: ./docker
            dockerfile: api-music.Dockerfile
        restart: always
        container_name: api-music
        working_dir: /var/www/api-music
        networks:
            c4_network:
                ipv4_address: 172.15.0.3
        ports:
            - ":9000"
        extra_hosts:
            - "host.docker.internal:host-gateway"
            - "db.music.local:172.15.0.4"
            - "redis.docker.local:172.15.0.5"
        volumes:
            - ./:/var/www/api-music
            - api-music-storage:/var/www/api-music/storage
    db:
        image: mysql
        container_name: database
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        environment:
            - MYSQL_ROOT_PASSWORD=qwerty123
            - MYSQL_DATABASE=music
            - MYSQL_USER=music_user
            - MYSQL_PASSWORD=secret
        networks:
            c4_network:
                ipv4_address: 172.15.0.4
        ports:
            - "3306:3306"
        volumes:
            - db-mysql:/var/lib/mysql
    redis:
        image: redis:6.2-alpine
        restart: always
        container_name: redis
        networks:
            c4_network:
                ipv4_address: 172.15.0.5
        ports:
            - "6379:6379"
        volumes:
            - redis:/data
    minio:
        image: minio/minio
        restart: always
        container_name: minio
        networks:
            c4_network:
                ipv4_address: 172.15.0.6
        ports:
            - "9005:9005"
            - "9006:9006"
        volumes:
            - minio:/data
        environment:
            MINIO_ROOT_USER: music_user
            MINIO_ROOT_PASSWORD: secret123
        command: server --address :9005 --console-address :9006 /data
    cron-scheduler:
        build:
            context: ./docker
            dockerfile: cron-scheduler.Dockerfile
        restart: always
        container_name: cron-scheduler
        networks:
            c4_network:
                ipv4_address: 172.15.0.7
        extra_hosts:
            -   "db.music.local:172.15.0.4"
            -   "redis.docker.local:172.15.0.5"
        volumes:
            -   ./:/var/www/api-music
            - cron-server-storage:/var/www/api-music/storage
    cron-process-subscriptions:
        build:
            context: ./docker
            dockerfile: cron-worker.Dockerfile
        restart: always
        container_name: cron-process-subscriptions
        working_dir: /var/www/api-music
        networks:
            c4_network:
                ipv4_address: 172.15.0.8
        extra_hosts:
            - "db.music.local:172.15.0.4"
            - "redis.docker.local:172.15.0.5"
        volumes:
            -   ./:/var/www/api-music
            - cron-server-storage:/var/www/api-music/storage
        command: php /var/www/api-music/artisan queue:work --queue=process-subscriptions --timeout 60
